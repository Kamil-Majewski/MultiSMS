@{
    ViewData["Title"] = "Home";
}

<div class="content-container">
    <div class="tab-content" id="category-tab-content">
        <div class="tab-pane show active" id="send-sms" aria-labelledby="sms-tab">
            <div class="alert alert-dismissible" id="status-message-sms" role="alert" style="border-radius: 50px; display:none;"></div>
            <div class="sms-container options-container">
                <div class="option-content">
                    <form class="sms-options-form options-form" id="send-sms-form">
                        <div class="row">
                            <div class="col">
                                <label for="GroupOfContacts">Grupa kontaktów</label>
                                <div style="width: 100%; display: inline-flex; justify-content: space-between;">
                                    <input type="text" class="form-input" id="GroupOfContacts" style="flex-grow:1; font-weight:500;" required disabled>
                                    <button class="violet-button" id="choose-group-of-contacts" type="button" style="min-width: 125px; height: 44px; margin-left: 30px;" onclick="OpenChooseGroupForSMS()">Wybierz</button>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label for="ChosenTemplate">Szablon</label>
                                <div style="width: 100%; display: inline-flex; justify-content: space-between;">
                                    <input type="text" class="form-input" id="ChosenTemplate" style="flex-grow:1; font-weight:500;" disabled>
                                    <button class="violet-button" id="choose-template" type="button" style="min-width: 125px; height: 44px; margin-left: 30px;" onclick="OpenChooseTemplateForSMS()">Wybierz</button>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col">
                                <label for="SmsText">Treść wiadomości *</label>
                                <textarea class="form-input" id="SmsText" rows="5" maxlength="160" required></textarea>
                                <div style="display: flex; justify-content:space-between;">
                                    <div>
                                        <a href="#more-options" class="bleak-hoverable options-hidden" style="margin-top: 0.20rem;">Więcej opcji</a>
                                    </div>
                                    <div style="margin-top: 0.20rem; text-align: right" id="sms-text-symbol-counter">&nbsp</div>
                                </div>
                            </div>
                        </div>
                        <div class="more-options-container" style="display:none;">
                            <div class="row">
                                <div class="col">
                                    <label for="AdditionalPhoneNumbers" style="margin-top:10px">Dodatkowe numery telefonu</label>
                                    <input type="text" class="form-input" id="AdditionalPhoneNumbers"/>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="Comment">Komentarz</label>
                                    <textarea class="form-input" id="Comment" rows="2" maxlength="100" style="margin-bottom:0px;"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="justify-content-center d-flex">
                            <button type="submit" class="violet-button" style="margin-top:20px;" id="SendSmsMessage">Wyślij wiadomość SMS</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="choose-group-for-sms-container list-container" style="display:none;">
                <div class="list-header">
                    <div class="previous-page" style="flex:1;">
                        <button class="violet-button" id="choose-group-for-sms-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToSMSWindow()">
                            <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                            <span>Powrót</span>
                        </button>
                    </div>
                    <div class="option-name" style="flex:auto; text-align:center;">
                        <span class="opion-name-placeholder" id="choose-group-for-sms-title">Wybierz grupę odbiorców wiadomości</span>
                    </div>
                    <div class="list-search-bar">
                        <input class="search-for search-for-group-for-sms" placeholder="Wyszukaj grupę" style="flex:1;" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="choose-group-for-sms-list table table-borderless" id="choose-group-for-sms-table">
                            <thead>
                                <tr>
                                    <th class="small-cell">Nazwa</th>
                                    <th class="big-cell">Opis</th>
                                    <th class="tiny-centered-cell">Liczba członków</th>
                                    <th class="tiny-centered-cell">Akcja</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="choose-template-for-sms-container list-container" style="display:none;">
                <div class="list-header">
                    <div class="previous-page" style="flex:1;">
                        <button class="violet-button" id="choose-template-for-sms-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToSMSWindow()">
                            <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                            <span>Powrót</span>
                        </button>
                    </div>
                    <div class="option-name" style="flex:auto; text-align:center;">
                        <span class="opion-name-placeholder" id="choose-template-for-sms-title">Wybierz szablon wiadomości</span>
                    </div>
                    <div class="list-search-bar">
                        <input class="search-for search-for-template-for-sms" placeholder="Wyszukaj szablon" style="flex:1;" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="choose-template-for-sms-list table table-borderless" id="choose-template-for-sms-table">
                            <thead>
                                <tr>
                                    <th scope="col">Nazwa</th>
                                    <th scope="col">Opis</th>
                                    <th scope="col">Treść</th>
                                    <th class="tiny-centered-cell">Opcje</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="templates">
            <div class="templates-list-container list-container">
                <div class="list-header">
                    <div class="list-header-left">
                        <button class="add-new-button violet-button" type="button" onclick="OpenCreateTemplateWindow()">Dodaj nowy</button>
                    </div>
                    <div class="list-search-bar d-flex">
                        <input class="search-for template-search" placeholder="Wyszukaj szablon" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="template-list table table-borderless" id="template-table">
                            <thead>
                                <tr>
                                    <th scope="col">Nazwa</th>
                                    <th scope="col">Opis</th>
                                    <th scope="col">Treść</th>
                                    <th class="centered-cell" scope="col">Opcje</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="templates-options-container options-container" style="display:none;">
                <div class="option-content">
                    <div class="options-header">
                        <div class="previous-page" style="flex:1;">
                            <button class="violet-button" id="templates-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToTemplateList()">
                                <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                                <span>Powrót</span>
                            </button>
                        </div>
                        <div class="option-name" style="flex:auto; text-align:center;">
                            <span class="opion-name-placeholder" id="template-input-window-title">Nowy szablon</span>
                        </div>
                        <div style="flex:1;"></div>
                    </div>
                    <form class="template-options-form options-form">
                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <label for="TemplateName">Nazwa szablonu *</label>
                                    <input type="text" class="form-input" id="templateNameInput" required maxlength="30"/>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="TemplateDescription">Opis</label>
                                    <input type="text" class="form-input" id="templateDescriptionInput" maxlength="50" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="TemplateContent">Treść wiadomości *</label>
                                    <textarea class="form-input" id="templateContentInput" rows="5" maxlength="160" required></textarea>
                                    <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterAdd">&nbsp</div>
                                </div>
                            </div>
                        </div>
                        <div class="justify-content-center d-flex">
                            <button type="submit" class="violet-button" id="createOrEditButtonTemplates"></button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="contacts">
            <div class="contacts-container">
                <div class="contacts-list-container list-container">
                    <div class="list-header">
                        <div class="list-header-left">
                            <button class="add-new-button violet-button" type="button" onclick="OpenCreateContactWindow()">Dodaj nowy</button>
                            <input type="file" id="import-file-input" style="display: none;" accept=".csv" />
                            <button class="import-contacts-button ie-button" type="button" onclick="TriggerFileInput()">Importuj kontakty</button>
                            <button class="export-contacts-button ie-button" type="button">Exportuj kontakty</button>
                        </div>
                        <div class="list-search-bar d-flex">
                            <input class="search-for contact-search" placeholder="Wyszukaj kontakt">
                        </div>
                    </div>
                    <div class="list-content">
                        <div class="table-responsive">
                            <table class="contacts-list table table-borderless" id="contacts-table" style="table-layout:fixed;">
                                <thead>
                                    <tr>
                                        <th class="tiny-cell">Imię</th>
                                        <th class="tiny-cell">Nazwisko</th>
                                        <th class="tiny-cell">Email</th>
                                        <th class="small-cell" style="width: 150px;">Numer telefonu</th>
                                        <th class="tiny-centered-cell">Status</th>
                                        <th class="centered-cell">Grupy</th>
                                        <th class="centered-cell" scope="col">Opcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="contacts-options-container options-container" style="margin: 20px; display: none;">
                    <div class="option-content">
                        <div class="options-header">
                            <div class="previous-page" style="flex:1;">
                                <button class="violet-button" id="contacts-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToContactList()">
                                    <span style="max-width:24px;"><img src="/icons/previous.png"></span>
                                    <span>Powrót</span>
                                </button>
                            </div>
                            <div class="option-name" style="flex:auto; text-align:center;">
                                <span class="opion-name-placeholder" id="contact-input-window-title">Nowy kontakt</span>
                            </div>
                            <div style="flex:1;"></div>
                        </div>
                        <form class="contact-options-form options-form">
                            <div class="personal-data" style="margin-bottom:20px;">
                                <span class="form-subtitle">Dane Personalne</span>
                                <div class="form-group" style="margin-top: 20px;">
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactName">Imię *</label>
                                            <input type="text" class="form-input" id="contactNameInput" required maxlength="40">
                                        </div>
                                        <div class="col">
                                            <label for="ContactSurname">Nazwisko *</label>
                                            <input type="text" class="form-input" id="contactSurnameInput" required maxlength="40">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactEmail">Email</label>
                                            <input type="email" class="form-input" id="contactEmail" maxlength="50">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="contact-data" style="margin-top:20px; margin-bottom:20px;">
                                <span class="form-subtitle">Dane Kontaktowe</span>
                                <div class="form-group" style="margin-top:20px;">
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactPhone">Numer telefonu *</label>
                                            <input type="tel" class="form-input" id="contactPhoneNumber" required maxlength="15" minlength="11" pattern="^(\+[0-9]{2} )?\d{3} \d{3} \d{3}$">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="contactHQAddress">Adres miejsca pracy</label>
                                            <input type="text" class="form-input" id="contactHQAddress" maxlength="50">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactPostalNumber">Kod pocztowy</label>
                                            <input type="text" class="form-input" id="ContactPostalNumber" pattern="[0-9]{2}-[0-9]{3}" maxlength="6">
                                        </div>
                                        <div class="col" style="flex-grow: 3;">
                                            <label for="ContactCity">Miasto</label>
                                            <input type="text" class="form-input" id="ContactCity" maxlength="30">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col" style="flex-grow:3;">
                                            <label for="contactDepartment">Jednostka organizacyjna</label>
                                            <input type="text" class="form-input" id="contactDepartment" maxlength="100">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="other-data" style="margin-top: 20px;">
                                <div class="form-group">
                                    <label for="contactIsActive" style="width:100%;">Czy kontakt obecnie jest zatrudniony?</label>
                                    <div class="form-check form-check-inline" style="margin-bottom: 8px;">
                                        <input class="check-input" type="radio" name="isActive?" id="isActiveYes" value="yes" checked />
                                        <label class="form-check-label" for="IsActiveYes">
                                            Tak
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="check-input" type="radio" name="isActive?" id="isActiveNo" value="no" />
                                        <label class="form-check-label" for="IsActiveNo">
                                            Nie
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="justify-content-center d-flex" style="margin-top: 20px;">
                                <button type="submit" class="violet-button" id="createOrEditButtonContacts"></button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="groups">
            <div class="groups-list-container list-container">
                <div class="list-header">
                    <div class="list-header-left">
                        <button class="add-new-button violet-button" type="button" onclick="OpenCreateGroupWindow()">Dodaj nową</button>
                    </div>
                    <div class="list-search-bar d-flex">
                        <input class="search-for group-search" placeholder="Wyszukaj grupę" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="group-list table table-borderless" id="group-table">
                            <thead>
                                <tr>
                                    <th class="small-cell">Nazwa</th>
                                    <th class="big-cell">Opis</th>
                                    <th class="tiny-centered-cell">Liczba członków</th>
                                    <th class="centered-cell" scope="col">Opcje</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="groups-options-container options-container" style="display:none;">
                <div class="option-content">
                    <div class="options-header">
                        <div class="previous-page" style="flex:1;">
                            <button class="violet-button" id="groups-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToGroupList()">
                                <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                                <span>Powrót</span>
                            </button>
                        </div>
                        <div class="option-name" style="flex:auto; text-align:center;">
                            <span class="opion-name-placeholder" id="group-input-window-title">Nowa grupa</span>
                        </div>
                        <div style="flex:1;"></div>
                    </div>
                    <form class="group-options-form options-form">
                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <label for="groupNameInput">Nazwa grupy *</label>
                                    <input type="text" class="form-input" id="groupNameInput" required maxlength="30" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="groupDescriptionInput">Opis grupy</label>
                                    <textarea class="form-input" id="groupDescriptionInput" rows="3" maxlength="100"></textarea>
                                    <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterAddGroups">&nbsp</div>
                                </div>
                            </div>
                        </div>
                        <div class="justify-content-center d-flex">
                            <button type="submit" class="violet-button" id="createOrEditButtonGroups"></button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="groups-options-container-assign list-container" style="display: none;">
                <div class="list-header">
                    <div class="previous-page" style="flex:1;">
                        <button class="violet-button" id="groups-assign-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToGroupListFromAssign()">
                            <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                            <span>Powrót</span>
                        </button>
                    </div>
                    <div class="option-name" style="flex:auto; text-align:center;">
                        <span class="opion-name-placeholder" id="group-asssign-window-title">Zarządzaj użytkownikami w grupie</span>
                    </div>
                    <div style="flex:1;"></div>
                </div>
                <div class="list-content" style="margin-bottom: 30px;">
                    <div class="table-responsive">
                        <table class="group-assign-chosen-group table table-borderless" id="group-assign-chosen-group-table">
                            <thead>
                                <tr>
                                    <th class="small-cell">Nazwa</th>
                                    <th class="big-cell">Opis</th>
                                    <th class="tiny-centered-cell">Liczba członków</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="list-header">
                    <div></div>
                    <div class="list-search-bar d-flex">
                        <input class="search-for group-search-for-user" placeholder="Wyszukaj użytkownika" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="group-assign-contact-list table table-borderless" id="group-assign-contact-list-table">
                            <thead>
                                <tr>
                                    <th class="tiny-cell">Imię</th>
                                    <th class="tiny-cell">Nazwisko</th>
                                    <th class="tiny-cell">Numer telefonu</th>
                                    <th class="tiny-centered-cell">Status</th>
                                    <th class="centered-cell">Grupy</th>
                                    <th class="tiny-centered-cell" style="width: 94px;">Akcja</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="logs">
            <div class="logs-list-container list-container">
                <div class="list-header">
                    <div class="list-header-left">

                    </div>
                    <div class="list-search-bar d-flex">
                        <input class="search-for log-search" placeholder="Wyszukaj logi" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="log-list table table-borderless" id="log-table">
                            <thead>
                                <tr>
                                    <th class="tiny-centered-cell">Typ</th>
                                    <th scope="col">Źródło</th>
                                    <th scope="col">Wiadomość</th>
                                    <th class="centered-cell" style="min-width:105px;">Data</th>
                                    <th class="tiny-centered-cell" scope="col">Opcje</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script defer>

    function CalculateHeaderWidth(){
        const sidebar = document.getElementById('toolbar');
        const header = document.getElementById('main-header');
        const renderedContent = document.getElementById('content-render');

        header.style.width = `${sidebar.offsetWidth + renderedContent.offsetWidth}px`;
    }

    function SendSMS(text, chosenGroupId, chosenGroupName, additionalPhoneNumbers, additionalInfo)
    {
        $.ajax({
            url: '@Url.Action("SendSmsMessage", "ServerSmsApi")',
            type: 'GET',
            contentType: 'application/json',
            data: { text: text, chosenGroupId: chosenGroupId, chosenGroupName: chosenGroupName, additionalPhoneNumbers: additionalPhoneNumbers, additionalInfo: additionalInfo },
            success: function (response) {
                if (response.status == "failed") {
                    console.log("Operation failed, server responded with code " + response.code + " - " + response.message);
                    $("#status-message-sms").addClass("failed-status");
                    $("#status-message-sms").html("Operacja zakończyła się niepowodzeniem, błąd " + response.code + " - " + response.message + "<button type='button' class='btn-close text-dark' aria-label='Close' onclick='CloseAlert()'></button>");
                    $("#status-message-sms").show();
                }
                else {
                    $("#status-message-sms").addClass("success-status");
                    console.log("Operation successful, messages queued: " + response.queued + ", messages unsent: " + response.unsent);
                    $("#status-message-sms").html("Wiadomość została wysłana (zakolejkowane: " + response.queued + ", niewysłane: " + response.unsent + ") <button type='button' class='btn-close text-dark' onclick='CloseAlert()' aria-label='Close'></button>");
                    $("#status-message-sms").show();
                    $("#send-sms-form :input").val('');
                    document.getElementById('sms-text-symbol-counter').innerHTML = "";
                    $("#GroupOfContacts").removeAttr("data-id");

                }
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function ImportContacts() {
        var fileInput = document.getElementById('import-file-input');
        var file = fileInput.files[0];

        if (file) {
            var fileName = file.name;

            if(!fileName.toLowerCase().endsWith('.csv')){

                console.log("Unsupported file type! Import aborted.")
                alert("Nieprawidłowy format pliku! Import przerwany.")
                fileInput.value = null;
                return;
            }
            var formData = new FormData();
            formData.append('file', file);

            $.ajax({
                url: '@Url.Action("ImportContacts", "Home")',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (responseObject) {
                    console.log("Nice")
                    fileInput.value = null;
                },
                error: function (error) {
                    console.error(error);
                    fileInput.value = null;
                }
            });
        }
    }

    function SanitizePolishSymbols(inputId) {

        const diacriticToAsciiMap = {
            'ą': 'a',
            'ć': 'c',
            'ę': 'e',
            'ł': 'l',
            'ń': 'n',
            'ó': 'o',
            'ś': 's',
            'ź': 'z',
            'ż': 'z',
            'Ą': 'A',
            'Ć': 'C',
            'Ę': 'E',
            'Ł': 'L',
            'Ń': 'N',
            'Ó': 'O',
            'Ś': 'S',
            'Ź': 'Z',
            'Ż': 'Z'
        };

        var input = document.getElementById(inputId);
        var inputValue = input.value;
        var sanitizedValue = inputValue.replace(/[ąćęłńóśźżĄĆĘŁŃÓŚŹŻ]/g, match => diacriticToAsciiMap[match] || match);
        input.value = sanitizedValue;
    }

    function DeleteTemplate(templateId) {

        $.ajax({
            url: '@Url.Action("DeleteTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId},
            success: function () {
                console.log("Successfully deleted template")
                FetchAllTemplatesAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CloseAlert(){
        $("#status-message-sms").hide();
    }

    function DeleteContact(contactId) {

        $.ajax({
            url: '@Url.Action("DeleteContact", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: contactId },
            success: function () {
                console.log("Successfully deleted contact")
                FetchAllContactsAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function DeleteGroup(groupId) {

        $.ajax({
            url: '@Url.Action("DeleteGroup", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: groupId },
            success: function () {
                console.log("Successfully deleted group")
                FetchAllGroupsAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditTemplate() {
        var templateId = $("#createOrEditButtonTemplates").attr('data-id');
        var templateName = $("#templateNameInput").val();
        var templateContent = $("#templateContentInput").val();
        var templateDescription = $("#templateDescriptionInput").val();
        $.ajax({
            url: '@Url.Action("EditTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId ,name: templateName, description: templateDescription, content: templateContent },
            success: function (templateName) {
                console.log("Successfully edited template " + templateName)
                FetchAllTemplatesAndPopulateTable();
                
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditContact() {
        var contactId = $("#createOrEditButtonContacts").attr('data-id');
        let name = $("#contactNameInput").val();
        let surname = $("#contactSurnameInput").val();
        let email = $("#contactEmail").val();
        let phoneNumber = $("#contactPhoneNumber").val();
        let address = $("#contactHQAddress").val();
        let zip = $("#ContactPostalNumber").val();
        let city = $("#ContactCity").val();
        let department = $("#contactDepartment").val();
        let isActive = document.querySelector('input[name="isActive?"]:checked').value;
        let assignedRoles = null;
        let assignedGroups = null;

        $.ajax({
            url: '@Url.Action("EditContact", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { contactId: contactId, contactName: name, contactSurname: surname, email: email, phone: phoneNumber, address: address, zip: zip, city: city, department: department, isActive: isActive },
            success: function (contactName) {
                console.log("Successfully edited contact " + contactName)
                FetchAllContactsAndPopulateTable();

            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditGroup() {
        var groupId = $("#createOrEditButtonGroups").attr('data-id');
        var groupName = $("#groupNameInput").val();
        var groupDescription = $("#groupDescriptionInput").val();
        $.ajax({
            url: '@Url.Action("EditGroup", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: groupId, name: groupName, description: groupDescription},
            success: function (groupName) {
                console.log("Successfully edited group " + groupName)
                FetchAllGroupsAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function FetchAllTemplatesAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllTemplates", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfTemplates) {
                console.log("Successfully retrieved templates")
                $('.template-list tbody').empty();

                $.each(listOfTemplates, function (index, item) {
                    var description = item.templateDescription;
                    if (description == null){
                        description = "Brak opisu"
                    }

                    var newRow = '<tr>' +
                        '<td class="small-cell">' + item.templateName + '</td>' +
                        '<td class="medium-cell">' + description + '</td>' +
                        '<td class="big-cell">' + item.templateContent + '</td>' +
                        '<td class="centered-cell">' +
                        '<a href="#details-' + item.templateId + '" class="icon-list template-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                        '<a href="#edit-' + item.templateId + '" class="icon-list template-edit"><img src="/icons/edit.png" title="Edytuj"/></a>' +
                        '<a href="#delete-' + item.templateId + '" class="icon-list template-delete"><img src="/icons/trash.png" title="Usuń"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('.template-list tbody').append(newRow);
                });
                
            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function FetchAllContactsAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllContacts", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfContacts) {
                console.log("Successfully retrieved contacts")
                $('.contacts-list tbody').empty();

                $.each(listOfContacts, function (index, item) {

                    var group = item.employeeGroupNames;
                    var email = item.email;

                    if (group == null || group.length == 0) {
                        group = "Nie przypisano";
                    }
                    else{
                        group = group.join(", ")
                    }

                    if (email == null){
                        email = "Brak danych"
                    }

                    var newRow = '<tr>' +
                        '<td class="tiny-cell">' + item.name + '</td>' +
                        '<td class="tiny-cell">' + item.surname + '</td>' +
                        '<td class="small-cell">' + email + '</td>' +
                        '<td class="small-cell">' + item.phoneNumber + '</td>';


                    if (item.isActive == true) {
                        newRow += '<td class="tiny-centered-cell"><span class="active-pill">Aktywny<span></td>';
                        }
                    else {
                        newRow += '<td class="tiny-centered-cell"><span class="inactive-pill">Nieaktywny<span></td>';
                    }

                    newRow += '<td class="centered-cell">' + group + '</td>' +
                    '<td class="centered-cell">' +
                    '<a href="#details-' + item.employeeId + '" class="icon-list contact-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                    '<a href="#edit-' + item.employeeId + '" class="icon-list contact-edit"><img src="/icons/edit.png" title="Edytuj"/></a>' +
                    '<a href="#delete-' + item.employeeId + '" class="icon-list contact-delete"><img src="/icons/trash.png" title="Usuń"/></a>' +
                    '</td>' +
                    '</tr>';


                    $('.contacts-list tbody').append(newRow);
                });

            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function FetchAllGroupsAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllGroups", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfGroups) {
                console.log("Successfully retrieved groups")
                $('.group-list tbody').empty();

                $.each(listOfGroups, function (index, item) {
                    var description = item.groupDescription;
                    if (description == null) {
                        description = "Brak opisu"
                    }

                    var newRow = '<tr>' +
                        '<td class="small-cell">' + item.groupName + '</td>' +
                        '<td class="big-cell">' + description + '</td>' +
                        '<td class="tiny-centered-cell">' + item.membersIds.length + '</td>' +
                        '<td class="centered-cell">' +
                        '<a href="#assign-' + item.groupId + '" class="icon-list group-assign"><img src="/icons/assign-users.png" title="Przypisz użytkowników"/></a>' +
                        '<a href="#details-' + item.groupId + '" class="icon-list group-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                        '<a href="#edit-' + item.groupId + '" class="icon-list group-edit"><img src="/icons/edit.png" title="Edytuj"/></a>' +
                        '<a href="#delete-' + item.groupId + '" class="icon-list group-delete"><img src="/icons/trash.png" title="Usuń"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('.group-list tbody').append(newRow);
                });

            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function FetchAllLogsAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllLogs", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfLogs) {
                console.log("Successfully retrieved logs")
                $('#log-table tbody').empty();

                $.each(listOfLogs, function (index, item) {
                    var newRow = '<tr>'
                    if(item.logType == "Błąd"){
                        newRow += '<td class="tiny-centered-cell"><span class="error-pill">' + item.logType + '</span></td>'
                    }
                    else{
                        newRow += '<td class="tiny-centered-cell"><span class="info-pill">' + item.logType + '</span></td>'
                    }
                    newRow += '<td class="tiny-cell">' + item.logSource + '</td>' +
                        '<td class="big-cell">' + item.logMessage + '</td>' +
                        '<td class="centered-cell" style="min-width:105px;">' + new Date(item.logCreationDate).toLocaleString('en-GB') + '</td>' +
                        '<td class="tiny-centered-cell">' +
                        '<a href="#details-' + item.logId + '" class="icon-list template-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('#log-table tbody').append(newRow);
                });

            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function PopulateTableForChooseGroupForSMS(){
        $.ajax({
            url: '@Url.Action("FetchAllValidGroups", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfGroups) {
                console.log("Successfully retrieved groups")
                $('#choose-group-for-sms-table tbody').empty();

                $.each(listOfGroups, function (index, item) {
                    var description = item.groupDescription;
                    if (description == null) {
                        description = "Brak opisu"
                    }

                    var newRow = '<tr>' +
                        '<td class="small-cell">' + item.groupName + '</td>' +
                        '<td class="big-cell">' + description + '</td>' +
                        '<td class="tiny-centered-cell">' + item.membersIds.length + '</td>' +
                        '<td class="tiny-centered-cell">' +
                        '<a href="#pick-' + item.groupId + '" class="icon-list group-pick-me"><img src="/icons/pick-me.png" title="Wybierz grupę"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('#choose-group-for-sms-table tbody').append(newRow);
                });
            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function PopulateTableForChooseTemplateForSMS(){
        $.ajax({
            url: '@Url.Action("FetchAllTemplates", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfTemplates) {
                console.log("Successfully retrieved templates")
                $('#choose-template-for-sms-table tbody').empty();

                $.each(listOfTemplates, function (index, item) {
                    var newRow = '<tr>' +
                        '<td class="small-cell">' + item.templateName + '</td>' +
                        '<td class="medium-cell">' + item.templateDescription + '</td>' +
                        '<td class="big-cell">' + item.templateContent + '</td>' +
                        '<td class="tiny-centered-cell">' +
                        '<a href="#pick-' + item.templateId + '" class="icon-list template-pick-me"><img src="/icons/pick-me.png" title="Wybierz szablon"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('#choose-template-for-sms-table tbody').append(newRow);
                });

            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function PopulateTablesForAssigningUsersToGroups(groupId) {
        $.ajax({
            url: '@Url.Action("GetGroupById", "Home")',
            type: 'GET',
            data: { id: groupId },

            contentType: 'application/json',
            success: function (groupEntity) {
                $("#group-assign-chosen-group-table tbody").empty();
                var newRow = '<tr>' +
                    '<td class="small-cell">' + groupEntity.groupName + '</td>' +
                    '<td class="big-cell">' + groupEntity.groupDescription + '</td>' +
                    '<td class="tiny-centered-cell">' + groupEntity.membersIds.length + '</td>' +
                    '</tr>';

                $('#group-assign-chosen-group-table').append(newRow);

                $.ajax({
                    url: '@Url.Action("FetchAllContacts", "Home")',
                    type: 'GET',
                    contentType: 'application/json',
                    success: function (listOfContacts) {

                        $('#group-assign-contact-list-table tbody').empty();

                        $.each(listOfContacts, function (index, item) {

                            var group = item.employeeGroupNames;

                            if (group == 'null' || group.length == 0) {
                                group = "Nie przypisano";
                            }
                            else{
                                group = group.join(", ");
                            }

                            var newRow = '<tr>' +
                                '<td class="tiny-cell">' + item.name + '</td>' +
                                '<td class="tiny-cell">' + item.surname + '</td>' +
                                '<td class="tiny-cell">' + item.phoneNumber + '</td>';

                            if (item.isActive == true) {
                                newRow += '<td class="tiny-centered-cell"><span class="active-pill">Aktywny<span></td>';
                            }
                            else {
                                newRow += '<td class="tiny-centered-cell"><span class="inactive-pill">Nieaktywny<span></td>';
                            }

                            newRow += '<td class="centered-cell">' + group + '</td>' +
                                '<td class="tiny-centered-cell">';

                            if (groupEntity.membersIds.includes(item.employeeId)) {

                                newRow += '<a href="#unassign-' + item.employeeId + '-' + groupEntity.groupId + '" class="icon-list contact-unassign"><img src="/icons/unassign-user.png" title="Wypisz z grupy"/></a>' +
                                    '</td>' +
                                    '</tr>';
                            }
                            else {
                                newRow += '<a href="#assign-' + item.employeeId + '-' + groupEntity.groupId + '" class="icon-list contact-assign" > <img src="/icons/assign-user.png" title = "Dopisz do grupy" /> </a>' +
                                    '</td>' +
                                    '</tr>';
                            }

                            $('#group-assign-contact-list-table tbody').append(newRow);
                        });
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });

                $(".groups-list-container").hide();
                $(".groups-options-container-assign").show();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CreateNewTemplate() {
        let name = $("#templateNameInput").val();
        let description = $("#templateDescriptionInput").val();
        let content = $("#templateContentInput").val();

        $.ajax({
            url: '@Url.Action("CreateNewTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { templateName: name, templateDescription: description, templateContent: content },
            success: function (templateEnitity) {
                FetchAllTemplatesAndPopulateTable();
                console.log("Successfully added new template")
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CreateNewContact() {
        let name = $("#contactNameInput").val();
        let surname = $("#contactSurnameInput").val();
        let email = $("#contactEmail").val();
        let phoneNumber = $("#contactPhoneNumber").val();
        let address = $("#contactHQAddress").val();
        let zip = $("#ContactPostalNumber").val();
        let city = $("#ContactCity").val();
        let department = $("#contactDepartment").val();
        let isActive = document.querySelector('input[name="isActive?"]:checked').value;

        $.ajax({
            url: '@Url.Action("CreateNewContact", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { contactName: name, contactSurname: surname, email: email, phone: phoneNumber, address: address, zip: zip, city: city, department: department, isActive: isActive },
            success: function (contactEnitityName) {
                FetchAllContactsAndPopulateTable();
                console.log("Successfully added new contact: " + contactEnitityName)
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CreateNewGroup() {
        let name = $("#groupNameInput").val();
        let description = $("#groupDescriptionInput").val();

        $.ajax({
            url: '@Url.Action("CreateNewGroup", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { groupName: name, groupDescription: description},
            success: function (groupName) {
                FetchAllGroupsAndPopulateTable();
                console.log("Successfully added new template: " + groupName)
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function TriggerFileInput(){
        $("#import-file-input").click();
    }

    function OpenCreateTemplateWindow(){
        const messageEle = document.getElementById('templateContentInput');
        document.getElementById('symbolCounterAdd').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');
        $("#symbolCounterAdd").innerHTML = '25';
        $("#template-input-window-title").html("Nowy szablon")
        $(".template-options-form").attr('id', 'create-template-form');
        $("#createOrEditButtonTemplates").html("Utwórz");
        $(".templates-list-container").hide();
        $(".templates-options-container").show();
    }

    function OpenCreateContactWindow() {
        document.getElementById("isActiveYes").checked = true;
        $("#contact-input-window-title").html("Nowy kontakt")
        $(".contact-options-form").attr('id', 'create-contact-form');
        $("#createOrEditButtonContacts").html("Utwórz");
        $(".contacts-list-container").hide();
        $(".contacts-options-container").show();
    }

    function OpenCreateGroupWindow() {
        const messageEle = document.getElementById('groupDescriptionInput');
        document.getElementById('symbolCounterAddGroups').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');
        $("#group-input-window-title").html("Nowa grupa")
        $(".group-options-form").attr('id', 'create-group-form');
        $("#createOrEditButtonGroups").html("Utwórz");
        $(".groups-list-container").hide();
        $(".groups-options-container").show();
    }

    function OpenChooseGroupForSMS() {
        PopulateTableForChooseGroupForSMS();
        $(".sms-container").hide();
        $(".choose-group-for-sms-container").show();
    }

    function OpenChooseTemplateForSMS() {
        PopulateTableForChooseTemplateForSMS();
        $(".sms-container").hide();
        $(".choose-template-for-sms-container").show();
    }

    function GoBackToSMSWindow(){
        $(".choose-group-for-sms-container").hide();
        $(".choose-template-for-sms-container").hide();
        $(".sms-container").show();
    }

    function GoBackToTemplateList() {
        $("#createOrEditButtonTemplates").removeAttr("data-id");
        $(".templates-list-container").show();
        $(".templates-options-container").hide();
        $(".template-options-form").removeAttr('id');
        $(".template-options-form :input").val('');
    }

    function GoBackToContactList() {
        $(".contact-options-form").removeAttr('id');
        $(".contact-options-form :input[type='text']").val('');
        $(".contacts-options-container").hide();
        $(".contacts-list-container").show();
    }

    function GoBackToGroupList() {
        $(".group-options-form").removeAttr('id');
        $(".group-options-form :input").val('');
        $(".groups-options-container").hide();
        $(".groups-options-container-assign").hide();
        $(".groups-list-container").show();
    }

    function GoBackToGroupListFromAssign() {
        FetchAllGroupsAndPopulateTable();
        $(".groups-options-container-assign").hide();
        $(".groups-list-container").show();
    }

    $(document).ready(function () {

        CalculateHeaderWidth();
        FetchAllTemplatesAndPopulateTable();
        FetchAllContactsAndPopulateTable();
        FetchAllGroupsAndPopulateTable();
        FetchAllLogsAndPopulateTable();

        let resizeTimer;
        window.addEventListener('resize', () => {
            hoveredWidthInVW = (190 / $(window).width()) * 100;
            differenceInVW = hoveredWidthInVW - (50 / $(window).width()) * 100;
            document.body.classList.add("resize-animation-stopper");
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(() => {
                document.body.classList.remove("resize-animation-stopper");
            }, 400);
            CalculateHeaderWidth();
        });

        var initialRenderContentWidthInVW = ($("#content-render").width() / $(window).width()) * 100;
        var initialToolboxContextWidthInPx = 50;
        var hoveredWidthInPx = 190;
        var hoveredWidthInVW = (190 / $(window).width()) * 100;
        var differenceInVW = hoveredWidthInVW - (50 / $(window).width()) * 100;

        $(".option-list-item").hover(
            function () {
                $("#toolbar").css("width", hoveredWidthInPx + "px");
                $("#content-render").css("width", (initialRenderContentWidthInVW - differenceInVW) + "vw");
            },
            function () {
                $("#toolbar").css("width", initialToolboxContextWidthInPx + "px");
                $("#content-render").css("width", initialRenderContentWidthInVW + "vw");
            }
        );

        $('#import-file-input').change(function () {
            ImportContacts();
        });
        
        $(document).on('click', '.template-delete', function (e) {
            var templateId = $(this).attr("href").split('-')[1];
            DeleteTemplate(templateId)
        });

        $(document).on('click', '.options-hidden', function () {
            $(".options-hidden").text("Ukryj opcje");
            $(".more-options-container").slideDown(300);
            $(".options-hidden").addClass("options-shown");
            $(".options-hidden").removeClass("options-hidden");

        });

        $(document).on('click', '.options-shown', function () {
            $(".options-shown").text("Więcej opcji");
            $(".more-options-container").slideUp(300);
            $(".options-shown").addClass("options-hidden");
            $(".options-shown").removeClass("options-shown");

        });

        $(document).on('click', '.contact-delete', function (e) {
            var contactId = $(this).attr("href").split('-')[1];
            DeleteContact(contactId)
        });

        $(document).on('click', '.group-delete', function (e) {
            var groupId = $(this).attr("href").split('-')[1];
            DeleteGroup(groupId)
        });

        $(document).on('click', '.template-edit', function (e) {
            var templateId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetTemplateById", "Home")',
                type: 'GET',
                data: {id: templateId},

                contentType: 'application/json',
                success: function (templateEnitity) {

                    $("#createOrEditButtonTemplates").attr("data-id", templateEnitity.templateId)
                    $("#templateNameInput").val(templateEnitity.templateName);
                    $("#templateDescriptionInput").val(templateEnitity.templateDescription);
                    $("#templateContentInput").val(templateEnitity.templateContent);
                    const messageEle = document.getElementById('templateContentInput');
                    document.getElementById('symbolCounterAdd').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');

                    $("#template-input-window-title").html("Edytuj szablon")
                    $(".template-options-form").attr('id', 'edit-template-form');
                    $("#createOrEditButtonTemplates").html("Zatwierdź edycję");
                    $(".templates-list-container").hide();
                    $(".templates-options-container").show();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('click', '.contact-edit', function (e) {
            var contactId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetContactById", "Home")',
                type: 'GET',
                data: { id: contactId },

                contentType: 'application/json',
                success: function (contactEnitity) {

                    if(contactEnitity.isActive == false){
                        document.querySelector('input[name="isActive?"]:checked').checked = false;
                        document.getElementById("isActiveNo").checked = true;
                    }

                    $("#createOrEditButtonContacts").attr("data-id", contactEnitity.employeeId)
                    $("#contactNameInput").val(contactEnitity.name);
                    $("#contactSurnameInput").val(contactEnitity.surname);
                    $("#contactEmail").val(contactEnitity.email);
                    $("#contactPhoneNumber").val(contactEnitity.phoneNumber);
                    $("#contactHQAddress").val(contactEnitity.hqAddress);
                    $("#ContactPostalNumber").val(contactEnitity.postalNumber);
                    $("#ContactCity").val(contactEnitity.city);
                    $("#contactDepartment").val(contactEnitity.department);

                    $("#contact-input-window-title").html("Edytuj kontakt")
                    $(".contact-options-form").attr('id', 'edit-contact-form');
                    $("#createOrEditButtonContacts").html("Zatwierdź edycję");
                    $(".contacts-options-container").show();
                    $(".contacts-list-container").hide();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('click', '.group-edit', function (e) {
            var groupId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetGroupById", "Home")',
                type: 'GET',
                data: { id: groupId },

                contentType: 'application/json',
                success: function (groupEntity) {

                    $("#createOrEditButtonGroups").attr("data-id", groupEntity.groupId)
                    $("#groupNameInput").val(groupEntity.groupName);
                    $("#groupDescriptionInput").val(groupEntity.groupDescription);
                    const messageEle = document.getElementById('groupDescriptionInput');
                    document.getElementById('symbolCounterAddGroups').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');

                    $("#group-input-window-title").html("Edytuj grupę")
                    $(".group-options-form").attr('id', 'edit-group-form');
                    $("#createOrEditButtonGroups").html("Zatwierdź edycję");
                    $(".groups-list-container").hide();
                    $(".groups-options-container").show();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('click', '.group-assign', function (e) {
            var groupId = $(this).attr("href").split('-')[1];
            PopulateTablesForAssigningUsersToGroups(groupId)
        });

        $(document).on('click', '.group-pick-me', function (e) {
            var groupId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetGroupById", "Home")',
                type: 'GET',
                data: { id: groupId },

                contentType: 'application/json',
                success: function (groupEntity) {
                    $("#GroupOfContacts").val(groupEntity.groupName);
                    $("#GroupOfContacts").attr('data-id', groupEntity.groupId);
                },
                error: function (error) {
                    console.error(error);
                }
            });
            GoBackToSMSWindow();  
        });

        $(document).on('click', '.template-pick-me', function (e) {
            var templateId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetTemplateById", "Home")',
                type: 'GET',
                data: { id: templateId },

                contentType: 'application/json',
                success: function (templateEntity) {
                    $("#ChosenTemplate").val(templateEntity.templateName);
                    $("#ChosenTemplate").attr('data-id', templateEntity.groupId);
                    $("#SmsText").val(templateEntity.templateContent);

                    const messageEle = document.getElementById('SmsText');
                    document.getElementById('sms-text-symbol-counter').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');
                },
                error: function (error) {
                    console.error(error);
                }
            });
            GoBackToSMSWindow();
        });

        $(document).on('click', '.contact-assign', function (e) {
            var assignContactIdGroupId = $(this).attr("href").split('-');

            $.ajax({
                url: '@Url.Action("AddUserToGroup", "Home")',
                type: 'GET',
                data: { groupId: assignContactIdGroupId[2], employeeId: assignContactIdGroupId[1] },
                contentType: 'application/json',
                success: function () {
                    console.log("Successfully added contact to group");
                    PopulateTablesForAssigningUsersToGroups(assignContactIdGroupId[2]);
                    FetchAllContactsAndPopulateTable();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('click', '.contact-unassign', function (e) {
            var assignContactIdGroupId = $(this).attr("href").split('-');

            $.ajax({
                url: '@Url.Action("RemoveUserFromGroup", "Home")',
                type: 'GET',
                data: { groupId: assignContactIdGroupId[2], employeeId: assignContactIdGroupId[1] },
                contentType: 'application/json',
                success: function () {
                    console.log("Successfully removed contact from group");
                    PopulateTablesForAssigningUsersToGroups(assignContactIdGroupId[2]);
                    FetchAllContactsAndPopulateTable();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });



        $(document).on('submit', '#create-template-form', function (e) {
            var form = document.getElementById("create-template-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
                }

            CreateNewTemplate();
            GoBackToTemplateList();
            $(".template-options-form :input").val('');

        });

        $(document).on('submit', '#create-contact-form', function (e) {
            var form = document.getElementById("create-contact-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            CreateNewContact();
            GoBackToContactList();

        });

        $(document).on('submit', '#create-group-form', function (e) {
            var form = document.getElementById("create-group-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            CreateNewGroup();
            GoBackToGroupList();
            $(".group-options-form :input").val('');

        });

        $(document).on('submit', '#edit-template-form', function (e) {
            var form = document.getElementById("edit-template-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            EditTemplate();
            GoBackToTemplateList();

        });

        $(document).on('submit', '#send-sms-form', function (e) {
            var form = document.getElementById("send-sms-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            var smsText = $("#SmsText").val();
            var smsGroupId = $("#GroupOfContacts").attr("data-id");
            var smsGroupName = $("#GroupOfContacts").val();
            var additionalPhoneNumbers = $("#AdditionalPhoneNumbers").val();
            var smsAdditionalInfo = $("#Comment").val();


            SendSMS(smsText, smsGroupId, smsGroupName, additionalPhoneNumbers, smsAdditionalInfo);
        });


        $(document).on('submit', '#edit-contact-form', function (e) {
            var form = document.getElementById("edit-contact-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            EditContact();
            GoBackToContactList();

        });

        $(document).on('submit', '#edit-group-form', function (e) {
            var form = document.getElementById("edit-group-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            EditGroup();
            GoBackToGroupList();

        });

        $(".template-search ").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#template-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".search-for-group-for-sms").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#choose-group-for-sms-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".search-for-template-for-sms").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#choose-template-for-sms-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".contact-search").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#contacts-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".group-search").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#group-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".group-search-for-user").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#group-assign-contact-list-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".log-search").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#log-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $("#ContactPostalNumber").on('input', function () {

            if (event.inputType === 'deleteContentBackward' || event.inputType === 'deleteContentForward') {
                return;
            }

            var inputValue = $(this).val();
            var cursorPosition = this.selectionStart;

            var sanitizedValue = inputValue.replace(/[^0-9]/g, '');

            var formattedValue = sanitizedValue.replace(/(\S{2})/, '$1-');
            var lengthDiff = formattedValue.length - inputValue.length;

            $(this).val(formattedValue);

            this.setSelectionRange(cursorPosition + lengthDiff, cursorPosition + lengthDiff);
            

        });

        $("#contactPhoneNumber").on('input', function () {
            var phoneInput = document.getElementById('contactPhoneNumber');

            if (event.inputType === 'deleteContentBackward' || event.inputType === 'deleteContentForward') {
                return;
            }

            var inputValue = phoneInput.value;
            var cursorPosition = phoneInput.selectionStart;

            var sanitizedValue = inputValue.replace(/[^0-9+]/g, '');

            var formattedValue = sanitizedValue.replace(/(\S{3})/g, '$1 ').trim();
            var lengthDiff = formattedValue.length - inputValue.length;
            
            phoneInput.value = formattedValue; 

            phoneInput.setSelectionRange(cursorPosition + lengthDiff, cursorPosition + lengthDiff);
        });

        
        $("#templateContentInput").on('input', function (e) {
            const counterEle = document.getElementById('symbolCounterAdd');

            SanitizePolishSymbols("templateContentInput");

            const target = e.target;
            const maxLength = target.getAttribute('maxlength');
            const currentLength = target.value.length;

            counterEle.innerHTML = `${currentLength}/${maxLength}`;
        });

        $("#SmsText").on('input', function (e) {
            const counterEle = document.getElementById('sms-text-symbol-counter');

            SanitizePolishSymbols("SmsText");

            const target = e.target;
            const maxLength = target.getAttribute('maxlength');
            const currentLength = target.value.length;

            counterEle.innerHTML = `${currentLength}/${maxLength}`;
        });

        $("#groupDescriptionInput").on('input', function (e) {
            const counterEle = document.getElementById('symbolCounterAddGroups');

            const target = e.target;
            const maxLength = target.getAttribute('maxlength');
            const currentLength = target.value.length;

            counterEle.innerHTML = `${currentLength}/${maxLength}`;
        });
    });


</script>
