@{
    ViewData["Title"] = "Home Page";
}


                    @* <div class="tab-pane" id="check-sms-logs">
                        Przeglądaj Logi
                    </div>
                    <div class="tab-pane" id="browse-sms-templates">
                        Przeglądaj szablony
                    </div>
                    <div class="tab-pane" id="add-sms-template">
                        <form id="createNewTemplateForm">
                            <div class="form-group">
                                <label for="TemplateName">Nazwa szablonu</label>
                                <input type="text" class="form-control" id="templateNameInputAdd" placeholder="Przykładowy Szablon" required />
                            </div>
                            <div class="form-group">
                                <label for="TemplateDescription">Opis</label>
                                <input type="text" class="form-control" id="templateDescriptionInputAdd" placeholder="Szablon przeznaczony jest dla..." />
                            </div>
                            <div class="form-group">
                                <label for="TemplateContent">Treść wiadomości</label>
                                <textarea class="form-control" id="templateContentInputAdd" rows="5" maxlength="255" placeholder="W związku z przygotowaniami do..." required></textarea>
                                <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterAdd">&nbsp</div>
                            </div>
                            <div class="justify-content-center d-flex">
                                <button type="submit" class="btn btn-success" id="createNewTemplateSubmitButton">Utwórz nowy szablon</button>
                            </div>
                        </form>
                    </div>
                    <div class="tab-pane" id="edit-sms-template">
                        <div class="select-template-containter d-flex">
                            <select class="custom-select" id="templateSelectEdit" title="Wybierz szablon"></select>
                            <button type="button" class="btn btn-primary" id="enableTemplateEditing" onclick="EnableTemplateEditing()" disabled>Edytuj</button>
                        </div>
                        <form id="editTemplateForm">
                            <div class="form-group">
                                <label for="TemplateName">Nazwa szablonu</label>
                                <input readonly type="text" class="form-control" id="templateNameInputEdit" placeholder="Szablon do edycji" required />
                            </div>
                            <div class="form-group">
                                <label for="TemplateDescription">Opis</label>
                                <input readonly type="text" class="form-control" id="templateDescriptionInputEdit" placeholder="Opis edytowanego szablonu" />
                            </div>
                            <div class="form-group">
                                <label for="TemplateContent">Treść wiadomości</label>
                                <textarea readonly class="form-control" id="templateContentInputEdit" rows="5" maxlength="255" placeholder="Treść edytowanego szablonu" required></textarea>
                                <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterEdit">&nbsp</div>
                            </div>
                            <div class="justify-content-center d-flex">
                                <button type="submit" class="btn btn-success" id="editNewTemplateSubmitButton" disabled>Zapisz edycję</button>
                            </div>
                        </form>
                    </div>
                    <div class="tab-pane" id="delete-sms-template">
                        <select class="custom-select" id="templateSelectDelete" title="Wybierz szablon" style="margin-bottom: 10px;"></select>
                        <form id="deleteTemplateForm">
                            <div class="form-group">
                                <label for="TemplateName">Nazwa szablonu</label>
                                <input readonly type="text" class="form-control" id="templateNameInputDelete" placeholder="Szablon do usunięcia" required />
                            </div>
                            <div class="form-group">
                                <label for="TemplateDescription">Opis</label>
                                <input readonly type="text" class="form-control" id="templateDescriptionInputDelete" placeholder="Opis usuwanego szablonu" />
                            </div>
                            <div class="form-group">
                                <label for="TemplateContent">Treść wiadomości</label>
                                <textarea readonly class="form-control" id="templateContentInputDelete" rows="5" maxlength="255" placeholder="Treść usuwanego szablonu" required></textarea>
                                <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterDelete">&nbsp</div>
                            </div>
                            <div class="justify-content-center d-flex">
                                <button type="submit" class="btn btn-danger" id="deleteTemplateSubmitButton" disable>Usuń szablon</button>
                            </div>
                        </form>
                    </div> *@
<div class="content-container">
    <div class="tab-content" id="category-tab-content">
        <div class="tab-pane show active" id="send-sms" aria-labelledby="sms-tab">
            <div class="d-flex sms-container">
                Wyślij SMS
            </div>
        </div>
        <div class="tab-pane" id="templates">
            <div class="d-flex templates-container">
                szablony
            </div>
        </div>
        <div class="tab-pane" id="contacts">
            <div class="d-flex contacts-container">
                kontakty
            </div>
        </div>
        <div class="tab-pane" id="groups">
            <div class="d-flex groups-container">
                grupy
            </div>
        </div>
        <div class="tab-pane" id="roles">
            <div class="d-flex role-container">
                role
            </div>
        </div>
        <div class="tab-pane" id="logs">
            <div class="d-flex logs-container">
                logi
            </div>
        </div>
    </div>
</div>

<script defer>

    function EnableTemplateEditing() {
        $("#templateNameInputEdit").prop('readonly', false);
        $("#templateDescriptionInputEdit").prop('readonly', false);
        $("#templateContentInputEdit").prop('readonly', false);
        $("#editNewTemplateSubmitButton").prop('disabled', false);
        $("#enableTemplateEditing").prop('disabled', true);
    }

    function DeleteTemplate() {
        var templateId = $("#templateSelectDelete").val();

        $.ajax({
            url: '@Url.Action("DeleteTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId},
            success: function (template) {
                console.log("Successfully deleted template")
                FetchAllTemplatesAndPopulateSelects();

            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditTemplate() {
        var templateId = $("#templateSelectEdit").val();
        var templateName = $("#templateNameInputEdit").val();
        var templateContent = $("#templateContentInputEdit").val();
        var templateDescription = $("#templateDescriptionInputEdit").val();
        $.ajax({
            url: '@Url.Action("EditTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId, name: templateName, description: templateDescription, content: templateContent },
            success: function (template) {
                console.log("Successfully edited template " + template.templateName)
                FetchAllTemplatesAndPopulateSelects();
                
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function FetchAllTemplatesAndPopulateSelects() {
        $.ajax({
            url: '@Url.Action("FetchAllTemplates", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfTemplates) {
                console.log("Successfully retrieved templates")

                var selectElements = $('.custom-select');

                selectElements.each(function () {
                    PopulateTemplateSelect($(this), listOfTemplates);
                })
                console.log("Populated options with templates successfully");
            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function PopulateTemplateSelect(element, listOfTemplates){
        element.empty();
        element.append('<option selected disabled>Wybierz szablon</option>');

        listOfTemplates.forEach(function (template) {
            element.append('<option value="' + template.templateId + '">' + template.templateName + '</option>');
        });
    }

    function GetTemplateByIdAndFillInputFields(id, type){
        $.ajax({
            url: '@Url.Action("GetTemplateById", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: id },
            success: function (template) {
                let nameInputField = document.getElementById("templateNameInput" + type);
                let descriptionInputField = document.getElementById("templateDescriptionInput" + type);
                let contentInputField = document.getElementById("templateContentInput" + type);

                nameInputField.value = template.templateName;
                descriptionInputField.value = template.templateDescription;
                contentInputField.value = template.templateContent;
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CreateNewTemplate() {
        let name = $("#templateNameInputAdd").val();
        let description = $("#templateDescriptionInputAdd").val();
        let content = $("#templateContentInputAdd").val();

        $.ajax({
            url: '@Url.Action("CreateNewTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: {templateName: name, templateDescription: description, templateContent: content},
            success: function (templateEnitity) {
                FetchAllTemplatesAndPopulateSelects();
                console.log("Successfully added new template")
            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    $(document).ready(function () {
        // $("#editTemplateForm").hide();
        // $("#deleteTemplateForm").hide();

        // FetchAllTemplatesAndPopulateSelects();

        // let addForm = document.getElementById("createNewTemplateForm");
        // let editForm = document.getElementById("editTemplateForm");
        // let deleteForm = document.getElementById("deleteTemplateForm");

        // addForm.addEventListener('submit', function (event) {
        //     event.preventDefault();

        //     if (addForm.checkValidity() === false) {
        //         addForm.reportValidity()
        //         return
        //     }

        //     CreateNewTemplate();
        // });

        // editForm.addEventListener('submit', function (event) {
        //     event.preventDefault();

        //     if (editForm.checkValidity() === false) {
        //         editForm.reportValidity()
        //         return
        //     }

        //     EditTemplate();
        // });

        // deleteForm.addEventListener('submit', function (event) {
        //     event.preventDefault();

        //     if (editForm.checkValidity() === false) {
        //         editForm.reportValidity()
        //         return
        //     }

        //     DeleteTemplate();
        // });

        // const messageEleForAdd = document.getElementById('templateContentInputAdd');
        // const messageEleForEdit = document.getElementById("templateContentInputEdit");
        
        // messageEleForAdd.addEventListener('input', function (e) {
        //     const target = e.target;
        //     const maxLength = target.getAttribute('maxlength');
        //     const currentLength = target.value.length;
        //     const counterEle = document.getElementById('symbolCounterAdd');
        //     counterEle.innerHTML = `${currentLength}/${maxLength}`;
        // });

        // messageEleForEdit.addEventListener('input', function (e) {
        //     const target = e.target;
        //     const maxLength = target.getAttribute('maxlength');
        //     const currentLength = target.value.length;
        //     const counterEle = document.getElementById('symbolCounterEdit');
        //     counterEle.innerHTML = `${currentLength}/${maxLength}`;
        // });

        $('#master-card-headers a').on('click', function (e) {
            $(".selected-tab").removeClass("selected-tab");
            e.preventDefault();
            $(this).tab('show');
        });

        // $('#sms-options-list a').on('click', function (e) {
        //     $(".selected-sms").removeClass("selected-sms");
        //     e.preventDefault();
        //     $(this).tab('show');
        //     $(this).parent().toggleClass('selected-sms');
        // });
        // $('#contacts-options-list a').on('click', function (e) {
        //     $(".selected-contacts").removeClass("selected-contacts");
        //     e.preventDefault();
        //     $(this).tab('show');
        //     $(this).parent().toggleClass('selected-contacts');
        // });
        // $('#groups-options-list a').on('click', function (e) {
        //     $(".selected-groups").removeClass("selected-groups");
        //     e.preventDefault();
        //     $(this).tab('show');
        //     $(this).parent().toggleClass('selected-groups');
        // });
        // $('#roles-options-list a').on('click', function (e) {
        //     $(".selected-roles").removeClass("selected-roles");
        //     e.preventDefault();
        //     $(this).tab('show');
        //     $(this).parent().toggleClass('selected-roles');
        // });

        // $("#templateSelectEdit").change(function () {
        //     $("#editTemplateForm").show();
        //     var templateId = $(this).val();
        //     $("#enableTemplateEditing").prop("disabled", false);
        //     GetTemplateByIdAndFillInputFields(templateId, "Edit");
        //     $("#templateNameInputEdit").prop('readonly', true);
        //     $("#templateDescriptionInputEdit").prop('readonly', true);
        //     $("#templateContentInputEdit").prop('readonly', true);
        //     $("#editNewTemplateSubmitButton").prop('disabled', true);
        // });

        // $("#templateSelectDelete").change(function () {
        //     $("#deleteTemplateForm").show();
        //     var templateId = $(this).val();
        //     GetTemplateByIdAndFillInputFields(templateId, "Delete");
        //     $("#deleteTemplateSubmitButton").prop('disabled', false);
        // });
    });


</script>
