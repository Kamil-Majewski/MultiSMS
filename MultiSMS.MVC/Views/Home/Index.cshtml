@{
    ViewData["Title"] = "Home";
}

<div class="content-container">
    <div class="tab-content" id="category-tab-content">
        <div class="tab-pane show active" id="send-sms" aria-labelledby="sms-tab">
            <div class="d-flex sms-container">
                Wyślij sms
            </div>
        </div>
        <div class="tab-pane" id="templates">
            <div class="templates-list-container list-container">
                <div class="list-header">
                    <div class="list-header-left">
                        <button class="add-new-button violet-button" type="button" onclick="OpenCreateTemplateWindow()">Dodaj nowy</button>
                    </div>
                    <div class="list-search-bar d-flex">
                        <input class="search-for template-search" placeholder="Wyszukaj szablon" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="template-list table table-borderless" id="template-table">
                            <thead>
                                <tr>
                                    <th scope="col">Nazwa</th>
                                    <th scope="col">Opis</th>
                                    <th scope="col">Treść</th>
                                    <th class="centered-cell" scope="col">Opcje</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="templates-options-container" style="margin:20px;">
                <div class="option-content">
                    <div class="options-header">
                        <div class="previous-page" style="flex:1;">
                            <button class="violet-button" id="templates-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToTemplateList()">
                                <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                                <span>Powrót</span>
                            </button>
                        </div>
                        <div class="option-name" style="flex:auto; text-align:center;">
                            <span class="opion-name-placeholder" id="template-input-window-title">Nowy szablon</span>
                        </div>
                        <div style="flex:1;"></div>
                    </div>
                    <form class="template-options-form options-form">
                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <label for="TemplateName">Nazwa szablonu *</label>
                                    <input type="text" class="form-input" id="templateNameInput" required />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="TemplateDescription">Opis</label>
                                    <input type="text" class="form-input" id="templateDescriptionInput" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label for="TemplateContent">Treść wiadomości *</label>
                                    <textarea class="form-input" id="templateContentInput" rows="5" maxlength="255" required></textarea>
                                    <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterAdd">&nbsp</div>
                                </div>
                            </div>
                        </div>
                        <div class="justify-content-center d-flex">
                            <button type="submit" class="violet-button" id="createOrEditButtonTemplates"></button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="contacts">
            <div class="contacts-container">
                <div class="contacts-list-container list-container">
                    <div class="list-header">
                        <div class="list-header-left">
                            <button class="add-new-button violet-button" type="button" onclick="OpenCreateContactWindow()">Dodaj nowy</button>
                            <button class="import-contacts-button ie-button" type="button">Importuj kontakty</button>
                            <button class="export-contacts-button ie-button" type="button">Exportuj kontakty</button>
                        </div>
                        <div class="list-search-bar d-flex">
                            <input class="search-for contact-search" placeholder="Wyszukaj kontakt">
                        </div>
                    </div>
                    <div class="list-content">
                        <div class="table-responsive">
                            <table class="contacts-list table table-borderless" id="contacts-table">
                                <thead>
                                    <tr>
                                        <th scope="col">Imię</th>
                                        <th scope="col">Nazwisko</th>
                                        <th scope="col">Numer telefonu</th>
                                        <th class="tiny-centered-cell">Status</th>
                                        <th class="centered-cell">Role</th>
                                        <th class="centered-cell">Grupy</th>
                                        <th class="centered-cell" scope="col">Opcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="contacts-options-container" style="margin: 20px; display: none;">
                    <div class="option-content">
                        <div class="options-header">
                            <div class="previous-page" style="flex:1;">
                                <button class="violet-button" id="contacts-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToContactList()">
                                    <span style="max-width:24px;"><img src="/icons/previous.png"></span>
                                    <span>Powrót</span>
                                </button>
                            </div>
                            <div class="option-name" style="flex:auto; text-align:center;">
                                <span class="opion-name-placeholder" id="contact-input-window-title">Nowy kontakt</span>
                            </div>
                            <div style="flex:1;"></div>
                        </div>
                        <form class="contact-options-form options-form">
                            <div class="personal-data" style="margin-bottom:20px;">
                                <span class="form-subtitle">Dane Personalne</span>
                                <div class="form-group" style="margin-top: 20px;">
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactName">Imię *</label>
                                            <input type="text" class="form-input" id="contactNameInput" required>
                                        </div>
                                        <div class="col">
                                            <label for="ContactSurname">Nazwisko *</label>
                                            <input type="text" class="form-input" id="contactSurnameInput" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactEmail">Email *</label>
                                            <input type="text" class="form-input" id="contactEmail" required>
                                        </div>
                                    </div>  
                                </div>
                            </div>
                            <hr />
                            <div class="contact-data" style="margin-top:20px; margin-bottom:20px;">
                                <span class="form-subtitle">Dane Kontaktowe</span>
                                <div class="form-group" style="margin-top:20px;">
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactPhone">Numer telefonu *</label>
                                            <input type="text" class="form-input" id="contactPhoneNumber" required>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="contactHQAddress">Adres miejsca pracy</label>
                                            <input type="text" class="form-input" id="contactHQAddress">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="ContactPostalNumber">Kod pocztowy</label>
                                            <input type="text" class="form-input" id="ContactPostalNumber">
                                        </div>
                                        <div class="col" style="flex-grow: 3;">
                                            <label for="ContactCity">Miasto</label>
                                            <input type="text" class="form-input" id="ContactCity">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col" style="flex-grow:3;">
                                            <label for="contactDepartment">Jednostka organizacyjna</label>
                                            <input type="text" class="form-input" id="contactDepartment">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="other-data" style="margin-top: 20px;">
                                @*<div class="pill-container" id="pillContainer"></div>

                                 <div class="dropdown">
                                    <input type="text" class="search-input" oninput="showDropdown(this.value)" placeholder="Search...">
                                    <div class="dropdown-content" id="dropdownContent"></div>
                                </div> *@

                                <div class="form-group">
                                    <label for="contactIsActive" style="width:100%;">Czy kontakt obecnie jest zatrudniony?</label>
                                    <div class="form-check form-check-inline" style="margin-bottom: 8px;">
                                        <input class="check-input" type="radio" name="isActive?" id="isActiveYes" value="yes" checked />
                                        <label class="form-check-label" for="IsActiveYes">
                                            Tak
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="check-input" type="radio" name="isActive?" id="isActiveNo" value="no" />
                                        <label class="form-check-label" for="IsActiveNo">
                                            Nie
                                        </label>    
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="contactRoles">Przypisz role</label>
                                            <input type="text" class="form-input" id="contactRoles">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <label for="contactGroups">Przypisz grupy</label>
                                            <input type="text" class="form-input" id="contactGroups">
                                        </div>
                                    </div> 
                                </div>
                            </div>
                            <div class="justify-content-center d-flex" style="margin-top: 20px;">
                                <button type="submit" class="violet-button" id="createOrEditButtonContacts"></button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="groups">
            <div class="d-flex groups-container">
                grupy
            </div>
        </div>
        <div class="tab-pane" id="roles">
            <div class="d-flex role-container">
                role
            </div>
        </div>
        <div class="tab-pane" id="logs">
            <div class="d-flex logs-container">
                logi
            </div>
        </div>
    </div>
</div>

@* <style>
    .pill-container {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
    }

    .pill {
        margin: 5px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        cursor: pointer;
    }

    .search-input {
        width: 200px;
        margin-right: 10px;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        z-index: 1;
    }

    .dropdown-content a {
        padding: 12px 16px;
        display: block;
        cursor: pointer;
    }

    .dropdown-content a:hover {
        background-color: #f1f1f1;
    }
</style> *@


<script defer>

    function DeleteTemplate(templateId) {

        $.ajax({
            url: '@Url.Action("DeleteTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId},
            success: function (template) {
                console.log("Successfully deleted template")
                FetchAllTemplatesAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function DeleteContact(contactId) {

        $.ajax({
            url: '@Url.Action("DeleteContact", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: contactId },
            success: function (contactName) {
                console.log("Successfully deleted template " + contactName)
                FetchAllContactsAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditTemplate() {
        var templateId = $("#createOrEditButtonTemplates").attr('data-id');
        var templateName = $("#templateNameInput").val();
        var templateContent = $("#templateContentInput").val();
        var templateDescription = $("#templateDescriptionInput").val();
        $.ajax({
            url: '@Url.Action("EditTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId ,name: templateName, description: templateDescription, content: templateContent },
            success: function (template) {
                console.log("Successfully edited template " + template.templateName)
                FetchAllTemplatesAndPopulateTable();
                
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditContact() {
        var contactId = $("#createOrEditButtonContacts").attr('data-id');
        let name = $("#contactNameInput").val();
        let surname = $("#contactSurnameInput").val();
        let email = $("#contactEmail").val();
        let phoneNumber = $("#contactPhoneNumber").val();
        let address = $("#contactHQAddress").val();
        let zip = $("#ContactPostalNumber").val();
        let city = $("#ContactCity").val();
        let department = $("#contactDepartment").val();
        let isActive = true;
        let assignedRoles = null;
        let assignedGroups = null;

        $.ajax({
            url: '@Url.Action("EditContact", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { contactId: contactId, contactName: name, contactSurname: surname, email: email, phone: phoneNumber, address: address, zip: zip, city: city, department: department, isActive: isActive },
            success: function (contactName) {
                console.log("Successfully edited contact " + contactName)
                FetchAllContactsAndPopulateTable();

            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function FetchAllTemplatesAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllTemplates", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfTemplates) {
                console.log("Successfully retrieved templates")
                $('.template-list tbody').empty();

                $.each(listOfTemplates, function (index, item) {
                    var newRow = '<tr>' +
                        '<td class="small-cell">' + item.templateName + '</td>' +
                        '<td class="medium-cell">' + item.templateDescription + '</td>' +
                        '<td class="big-cell">' + item.templateContent + '</td>' +
                        '<td class="centered-cell">' +
                        '<a href="#details-' + item.templateId + '" class="icon-list template-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                        '<a href="#edit-' + item.templateId + '" class="icon-list template-edit"><img src="/icons/edit.png" title="Edytuj"/></a>' +
                        '<a href="#delete-' + item.templateId + '" class="icon-list template-delete"><img src="/icons/trash.png" title="Usuń"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('.template-list tbody').append(newRow);
                });
                
            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function FetchAllContactsAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllContacts", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfContacts) {
                console.log("Successfully retrieved contacts")
                $('.contacts-list tbody').empty();

                $.each(listOfContacts, function (index, item) {

                    var group = item.employeesGroup;
                    var role = item.employeeRole;

                    if (item.employeesGroup = 'null') {
                        group = "Nie przypisano";
                    }
                    if (item.employeeRole = 'null') {
                        var role = "Nie przypisano"
                    }

                    var newRow = '<tr>' +
                        '<td class="tiny-cell">' + item.name + '</td>' +
                        '<td class="tiny-cell">' + item.surname + '</td>' +
                        '<td class="tiny-cell">' + item.phoneNumber + '</td>';

                    if (item.isActive == true) {
                        newRow += '<td class="tiny-centered-cell"><span class="active-pill">Aktywny<span></td>';
                        }
                    else {
                        newRow += '<td class="tiny-centered-cell"><span class="inactive-pill">Nieaktywny<span></td>';
                    }

                    newRow += '<td class="centered-cell">' + role + '</td>' +
                    '<td class="centered-cell">' + group + '</td>' +
                    '<td class="centered-cell">' +
                    '<a href="#details-' + item.employeeId + '" class="icon-list contact-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                    '<a href="#edit-' + item.employeeId + '" class="icon-list contact-edit"><img src="/icons/edit.png" title="Edytuj"/></a>' +
                    '<a href="#delete-' + item.employeeId + '" class="icon-list contact-delete"><img src="/icons/trash.png" title="Usuń"/></a>' +
                    '</td>' +
                    '</tr>';


                    $('.contacts-list tbody').append(newRow);
                });

            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function CreateNewTemplate() {
        let name = $("#templateNameInput").val();
        let description = $("#templateDescriptionInput").val();
        let content = $("#templateContentInput").val();

        $.ajax({
            url: '@Url.Action("CreateNewTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { templateName: name, templateDescription: description, templateContent: content },
            success: function (templateEnitity) {
                FetchAllTemplatesAndPopulateTable();
                console.log("Successfully added new template")
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CreateNewContact() {
        let name = $("#contactNameInput").val();
        let surname = $("#contactSurnameInput").val();
        let email = $("#contactEmail").val();
        let phoneNumber = $("#contactPhoneNumber").val();
        let address = $("#contactHQAddress").val();
        let zip = $("#ContactPostalNumber").val();
        let city = $("#ContactCity").val();
        let department = $("#contactDepartment").val();
        let isActive = true;
        let assignedRoles = null;
        let assignedGroups = null;

        $.ajax({
            url: '@Url.Action("CreateNewContact", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { contactName: name, contactSurname: surname, email: email, phone: phoneNumber, address: address, zip: zip, city: city, department: department, isActive: isActive },
            success: function (contactEnitityName) {
                FetchAllContactsAndPopulateTable();
                console.log("Successfully added new contact: " + contactEnitityName)
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function OpenCreateTemplateWindow(){
        const messageEle = document.getElementById('templateContentInput');
        document.getElementById('symbolCounterAdd').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');
        $("#symbolCounterAdd").innerHTML = '25';
        $("#template-input-window-title").html("Nowy szablon")
        $(".template-options-form").attr('id', 'create-template-form');
        $("#createOrEditButtonTemplates").html("Utwórz");
        $(".templates-list-container").hide();
        $(".templates-options-container").show();
    }

    function OpenCreateContactWindow() {
        $("#contact-input-window-title").html("Nowy kontakt")
        $(".contact-options-form").attr('id', 'create-contact-form');
        $("#createOrEditButtonContacts").html("Utwórz");
        $(".contacts-list-container").hide();
        $(".contacts-options-container").show();
    }


    function GoBackToTemplateList() {
        $("#createOrEditButtonTemplates").removeAttr("data-id");
        $(".templates-list-container").show();
        $(".templates-options-container").hide();
        $(".template-options-form").removeAttr('id');
        $(".template-options-form :input").val('');
    }

    function GoBackToContactList() {
        $(".contact-options-form").removeAttr('id');
        $(".contact-options-form :input").val('');
        $(".contacts-options-container").hide();
        $(".contacts-list-container").show();
        

    }

    $(document).ready(function () {
        const messageEle = document.getElementById('templateContentInput');
        const counterEle = document.getElementById('symbolCounterAdd');
        $(".templates-options-container").hide();
        FetchAllTemplatesAndPopulateTable();
        FetchAllContactsAndPopulateTable();

        $(document).on('click', '.template-delete', function (e) {
            var templateId = $(this).attr("href").split('-')[1];
            DeleteTemplate(templateId)
        });

        $(document).on('click', '.contact-delete', function (e) {
            var contactId = $(this).attr("href").split('-')[1];
            DeleteContact(contactId)
        });

        $(document).on('click', '.template-edit', function (e) {
            var templateId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetTemplateById", "Home")',
                type: 'GET',
                data: {id: templateId},

                contentType: 'application/json',
                success: function (templateEnitity) {

                    $("#createOrEditButtonTemplates").attr("data-id", templateEnitity.templateId)
                    $("#templateNameInput").val(templateEnitity.templateName);
                    $("#templateDescriptionInput").val(templateEnitity.templateDescription);
                    $("#templateContentInput").val(templateEnitity.templateContent);
                    const messageEle = document.getElementById('templateContentInput');
                    document.getElementById('symbolCounterAdd').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');

                    $("#template-input-window-title").html("Edytuj szablon")
                    $(".template-options-form").attr('id', 'edit-template-form');
                    $("#createOrEditButtonTemplates").html("Zatwierdź edycję");
                    $(".templates-list-container").hide();
                    $(".templates-options-container").show();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('click', '.contact-edit', function (e) {
            var contactId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetContactById", "Home")',
                type: 'GET',
                data: { id: contactId },

                contentType: 'application/json',
                success: function (contactEnitity) {

                    $("#createOrEditButtonContacts").attr("data-id", contactEnitity.employeeId)
                    $("#contactNameInput").val(contactEnitity.name);
                    $("#contactSurnameInput").val(contactEnitity.surname);
                    $("#contactEmail").val(contactEnitity.email);
                    $("#contactPhoneNumber").val(contactEnitity.phoneNumber);
                    $("#contactHQAddress").val(contactEnitity.hqAddress);
                    $("#ContactPostalNumber").val(contactEnitity.postalNumber);
                    $("#ContactCity").val(contactEnitity.city);
                    $("#contactDepartment").val(contactEnitity.department);
                    $("#contactRoles").val(contactEnitity.employeeRole);
                    $("#contactGroups").val(contactEnitity.employeesGroup);

                    $("#contact-input-window-title").html("Edytuj kontakt")
                    $(".contact-options-form").attr('id', 'edit-contact-form');
                    $("#createOrEditButtonContacts").html("Zatwierdź edycję");
                    $(".contacts-options-container").show();
                    $(".contacts-list-container").hide();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('submit', '#create-template-form', function (e) {
            var form = document.getElementById("create-template-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
                }

            CreateNewTemplate();
            GoBackToTemplateList();
            $(".template-options-form :input").val('');

        });

        $(document).on('submit', '#create-contact-form', function (e) {
            var form = document.getElementById("create-contact-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            CreateNewContact();
            GoBackToContactList();
            $(".contact-options-form :input").val('');

        });

        $(document).on('submit', '#edit-template-form', function (e) {
            var form = document.getElementById("edit-template-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            EditTemplate();
            GoBackToTemplateList();

        });

        $(document).on('submit', '#edit-contact-form', function (e) {
            var form = document.getElementById("edit-contact-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            EditContact();
            GoBackToContactList();

        });

        $(".template-search").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#template-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        $(".contact-search").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#contacts-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        messageEle.addEventListener('input', function (e) {
            const target = e.target;
            const maxLength = target.getAttribute('maxlength');
            const currentLength = target.value.length;

            counterEle.innerHTML = `${currentLength}/${maxLength}`;
        });
    });


</script>
