@{
    ViewData["Title"] = "Home Page";
}

<div class="content-container">
    <div class="tab-content" id="category-tab-content">
        <div class="tab-pane show active" id="send-sms" aria-labelledby="sms-tab">
            <div class="d-flex sms-container">
                Wyślij sms
            </div>
        </div>
        <div class="tab-pane" id="templates">
            <div class="templates-list-container">
                <div class="list-header">
                    <div class="list-header-left">
                        <button class="add-new-button violet-button" type="button" onclick="OpenCreateTemplateWindow()">Dodaj nowy</button>
                    </div>
                    <div class="list-search-bar d-flex">
                        <input class="search-for" placeholder="Wyszukaj szablon" />
                    </div>
                </div>
                <div class="list-content">
                    <div class="table-responsive">
                        <table class="template-list table table-borderless" id="template-table">
                            <thead>
                                <tr>
                                    <th scope="col">Nazwa</th>
                                    <th scope="col">Opis</th>
                                    <th scope="col">Treść</th>
                                    <th class="centered-cell" scope="col">Opcje</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="templates-options-container" style="margin:20px;">
                <div class="options-header">
                    <div class="previous-page">
                        <button class="violet-button" id="templates-previous-button" type="button" style="display: flex; align-items:center;" onclick="GoBackToList()">
                            <span style="max-width:24px;"><img src="~/icons/previous.png" /></span>
                            <span>Powrót</span>
                        </button>
                    </div>
                    <div class="option-name">
                        <span class="opion-name-placeholder" id="template-input-window-title">Nowy szablon</span>
                    </div>
                </div>
                <div class="list-content">
                    <form class="template-options-form">
                        <div class="form-group">
                            <label for="TemplateName">Nazwa szablonu</label>
                            <input type="text" class="form-input" id="templateNameInput" required />
                        </div>
                        <div class="form-group">
                            <label for="TemplateDescription">Opis</label>
                            <input type="text" class="form-input" id="templateDescriptionInput"  />
                        </div>
                        <div class="form-group">
                            <label for="TemplateContent">Treść wiadomości</label>
                            <textarea class="form-input" id="templateContentInput" rows="5" maxlength="255" required></textarea>
                            <div style="margin-top: 0.25rem; text-align: right" id="symbolCounterAdd">&nbsp</div>
                        </div>
                        <div class="justify-content-center d-flex">
                            <button type="submit" class="violet-button" id="createOrEditButton"></button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="tab-pane" id="contacts">
            <div class="d-flex contacts-container">
                kontakty
            </div>
        </div>
        <div class="tab-pane" id="groups">
            <div class="d-flex groups-container">
                grupy
            </div>
        </div>
        <div class="tab-pane" id="roles">
            <div class="d-flex role-container">
                role
            </div>
        </div>
        <div class="tab-pane" id="logs">
            <div class="d-flex logs-container">
                logi
            </div>
        </div>
    </div>
</div>

<script defer>

    function DeleteTemplate(templateId) {

        $.ajax({
            url: '@Url.Action("DeleteTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId},
            success: function (template) {
                console.log("Successfully deleted template")
                FetchAllTemplatesAndPopulateTable();
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function EditTemplate() {
        var templateId = $("#createOrEditButton").attr('data-id');
        var templateName = $("#templateNameInput").val();
        var templateContent = $("#templateContentInput").val();
        var templateDescription = $("#templateDescriptionInput").val();
        $.ajax({
            url: '@Url.Action("EditTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: templateId ,name: templateName, description: templateDescription, content: templateContent },
            success: function (template) {
                console.log("Successfully edited template " + template.templateName)
                FetchAllTemplatesAndPopulateTable();
                
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function FetchAllTemplatesAndPopulateTable() {
        $.ajax({
            url: '@Url.Action("FetchAllTemplates", "Home")',
            type: 'GET',
            contentType: 'application/json',
            success: function (listOfTemplates) {
                console.log("Successfully retrieved templates")
                $('.template-list tbody').empty();

                $.each(listOfTemplates, function (index, item) {
                    var newRow = '<tr>' +
                        '<td class="small-cell">' + item.templateName + '</td>' +
                        '<td class="medium-cell">' + item.templateDescription + '</td>' +
                        '<td class="big-cell">' + item.templateContent + '</td>' +
                        '<td class="centered-cell">' +
                        '<a href="#details-' + item.templateId + '" class="icon-list template-details"><img src="/icons/view-doc.png" title="Szczegóły"/></a>' +
                        '<a href="#edit-' + item.templateId + '" class="icon-list template-edit"><img src="/icons/edit.png" title="Edytuj"/></a>' +
                        '<a href="#delete-' + item.templateId + '" class="icon-list template-delete"><img src="/icons/trash.png" title="Usuń"/></a>' +
                        '</td>' +
                        '</tr>';


                    $('.template-list tbody').append(newRow);
                });
                
            },
            error: function (error) {
                console.error(error);
            }
        })
    }

    function GetTemplateByIdAndFillInputFields(id, type){
        $.ajax({
            url: '@Url.Action("GetTemplateById", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { id: id },
            success: function (template) {
                let nameInputField = document.getElementById("templateNameInput" + type);
                let descriptionInputField = document.getElementById("templateDescriptionInput" + type);
                let contentInputField = document.getElementById("templateContentInput" + type);

                nameInputField.value = template.templateName;
                descriptionInputField.value = template.templateDescription;
                contentInputField.value = template.templateContent;
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function CreateNewTemplate() {
        let name = $("#templateNameInput").val();
        let description = $("#templateDescriptionInput").val();
        let content = $("#templateContentInput").val();

        $.ajax({
            url: '@Url.Action("CreateNewTemplate", "Home")',
            type: 'GET',
            contentType: 'application/json',
            data: { templateName: name, templateDescription: description, templateContent: content },
            success: function (templateEnitity) {
                FetchAllTemplatesAndPopulateTable();
                console.log("Successfully added new template")
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    function OpenCreateTemplateWindow(){
        const messageEle = document.getElementById('templateContentInput');
        document.getElementById('symbolCounterAdd').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');
        $("#symbolCounterAdd").innerHTML = '25';
        $("#template-input-window-title").html("Nowy szablon")
        $(".template-options-form").attr('id', 'create-template-form');
        $("#createOrEditButton").html("Utwórz");
        $(".templates-list-container").hide();
        $(".templates-options-container").show();
    }


    function GoBackToList() {
        $("#createOrEditButton").removeAttr("data-id");
        $(".templates-list-container").show();
        $(".templates-options-container").hide();
        $(".template-options-form").removeAttr('id');
        $(".template-options-form :input").val('');
    }

    $(document).ready(function () {
        const messageEle = document.getElementById('templateContentInput');
        const counterEle = document.getElementById('symbolCounterAdd');
        $(".templates-options-container").hide();
        FetchAllTemplatesAndPopulateTable();

        $(document).on('click', '.template-delete', function (e) {
            var templateId = $(this).attr("href").split('-')[1];
            DeleteTemplate(templateId)
        });

        $(document).on('click', '.template-edit', function (e) {
            var templateId = $(this).attr("href").split('-')[1];

            $.ajax({
                url: '@Url.Action("GetTemplateById", "Home")',
                type: 'GET',
                data: {id: templateId},
                contentType: 'application/json',
                success: function (templateEnitity) {

                    $("#createOrEditButton").attr("data-id", templateEnitity.templateId)
                    $("#templateNameInput").val(templateEnitity.templateName);
                    $("#templateDescriptionInput").val(templateEnitity.templateDescription);
                    $("#templateContentInput").val(templateEnitity.templateContent);
                    const messageEle = document.getElementById('templateContentInput');
                    document.getElementById('symbolCounterAdd').innerHTML = messageEle.value.length + "/" + messageEle.getAttribute('maxlength');

                    $("#template-input-window-title").html("Edytuj szablon")
                    $(".template-options-form").attr('id', 'edit-template-form');
                    $("#createOrEditButton").html("Zatwierdź edycję");
                    $(".templates-list-container").hide();
                    $(".templates-options-container").show();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        });

        $(document).on('submit', '#create-template-form', function (e) {
            var form = document.getElementById("create-template-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
                }

            CreateNewTemplate();
            GoBackToList();
            $(".template-options-form :input").val('');

        });

        $(document).on('submit', '#edit-template-form', function (e) {
            var form = document.getElementById("edit-template-form");
            e.preventDefault();

            if (form.checkValidity() === false) {
                form.reportValidity()
                return
            }

            EditTemplate();
            GoBackToList();
            $(".template-options-form :input").val('');

        });

        $(".search-for").on('input', function () {

            var filterText = $(this).val().toLowerCase();

            $('#template-table tbody tr').each(function () {
                var rowHit = false;
                $(this).find('td').each(function () {
                    if ($(this).text().toLowerCase().includes(filterText)) {
                        rowHit = true;
                        return false;
                    }
                });

                $(this).toggle(rowHit);
            });
        });

        messageEle.addEventListener('input', function (e) {
            const target = e.target;
            const maxLength = target.getAttribute('maxlength');
            const currentLength = target.value.length;

            counterEle.innerHTML = `${currentLength}/${maxLength}`;
        });
    });


</script>
